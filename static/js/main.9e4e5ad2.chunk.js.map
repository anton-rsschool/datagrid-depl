{"version":3,"sources":["serviceWorker.js","redux/actionsTypes.js","redux/actions.js","components/FilterBar/Search/index.js","components/FilterBar/Search/Search.jsx","components/FilterBar/EnumFilter/EnumFilter.jsx","components/FilterBar/EnumFilter/index.js","components/FilterBar/Toggle/index.js","components/FilterBar/Toggle/Toggle.jsx","components/FilterBar/index.js","components/FilterBar/FilterBar.jsx","utils/sortData.js","utils/filterData.js","components/ToolBar/index.js","components/ToolBar/ToolBar.jsx","utils/saveSCV.js","components/Table/SortToggle/index.js","components/Table/SortToggle/SortToggle.jsx","components/Table/THead/index.js","components/Table/THead/THead.jsx","components/Table/Row/index.js","components/Table/Row/Row.jsx","components/Table/TBody/index.js","components/Table/TBody/TBody.jsx","components/Table/index.js","components/Table/Table.jsx","components/App/index.js","components/App/App.jsx","utils/getData.js","redux/reducer.js","index.js","components/Table/SortToggle/img/sort-not.svg","components/Table/SortToggle/img/sort-asc.svg","components/Table/SortToggle/img/sort-desc.svg"],"names":["Boolean","window","location","hostname","match","changeSearchQquery","payload","type","changeFilter","selectRow","Search","searchQuery","useSelector","state","initialQuery","query","initialSelectedOptions","fields","value","label","useState","selectedOptions","changeSelectedOptions","changeQuery","dispatch","useDispatch","className","htmlFor","onSubmit","event","preventDefault","id","onChange","target","placeholder","opts","options","isMulti","isSearchable","Filter","defaultOptions","changeValue","defaultProps","EnumFilter","Toggle","onToggle","isChecked","defaultChecked","checked","FilterBar","filters","role","map","item","toUpperCase","slice","field","values","data","sort","item1","item2","keys","Object","length","i","key","filter","some","String","toLowerCase","indexOf","search","every","elem","ToolBar","selectedRows","visibleColumns","params","isFixed","styles","multiValue","base","backgroundColor","multiValueLabel","fontWeight","color","paddingRight","multiValueRemove","display","disabled","onClick","action","removedValue","v","isClearable","visibleColumn","filteredData","filterData","sortingData","sortData","columns","includes","string","join","forEach","row","push","hiddenElement","document","createElement","href","encodeURI","download","click","saveSCV","SortToggle","children","order","onChangeSort","index","IMAGES","asc","sortAsc","desc","sortDesc","not","sortNot","shiftKey","isPressedShift","src","alt","THead","sortList","Row","onSelectRow","selected","items","TBody","rows","Table","initData","lastSelectedRow","isVirtualize","virtualization","handleSelectRow","args","endIndex","findIndex","startIndex","elements","lastSel","handleShangeSort","changeSort","COLUMNS","name","age","city","active","email","registration","moment","format","object","array","result","innerElementType","forwardRef","ref","rest","height","itemCount","itemSize","width","overscanCount","style","App","getData","number","firstName","faker","lastName","random","uuid","address","boolean","internet","arrayElement","date","between","getTime","reducer","newSort","cloneSort","newOrder","newSearchQuery","newFilters","newSelectedRow","el","idList","newData","splice","savedState","localStorage","getItem","initialState","JSON","parse","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","rootElement","getElementById","ReactDOM","render","addEventListener","getState","newState","currentState","stringify","setItem","navigator","serviceWorker","ready","then","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9e4e5ad2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const CHANGE_SORT = 'CHANGE_SORT';\r\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\nexport const SELECT_ROW = 'SELECT_ROW';\r\nexport const DELETE_ROW = 'DELETE_ROW';\r\nexport const CHANGE_VISIBLE_COLUMNS = 'CHANGE_VISIBLE_COLUMNS';\r\nexport const TOGGLE_VIRTUALIZATION = 'TOGGLE_VIRTUALIZATION';\r\n","import {\r\n  CHANGE_SORT,\r\n  CHANGE_SEARCH_QUERY,\r\n  CHANGE_FILTER,\r\n  SELECT_ROW,\r\n  DELETE_ROW,\r\n  CHANGE_VISIBLE_COLUMNS,\r\n  TOGGLE_VIRTUALIZATION,\r\n} from './actionsTypes';\r\n\r\nconst changeSort = (payload) => (\r\n  {\r\n    type: CHANGE_SORT,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst changeSearchQquery = (payload) => (\r\n  {\r\n    type: CHANGE_SEARCH_QUERY,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst changeFilter = (payload) => (\r\n  {\r\n    type: CHANGE_FILTER,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst selectRow = (payload) => (\r\n  {\r\n    type: SELECT_ROW,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst deleteRow = (payload) => (\r\n  {\r\n    type: DELETE_ROW,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst changeVisibleColumns = (payload) => (\r\n  {\r\n    type: CHANGE_VISIBLE_COLUMNS,\r\n    payload,\r\n  }\r\n);\r\n\r\nconst toggleVirtualization = (payload) => (\r\n  {\r\n    type: TOGGLE_VIRTUALIZATION,\r\n    payload,\r\n  }\r\n);\r\n\r\nexport {\r\n  changeSort,\r\n  changeSearchQquery,\r\n  changeFilter,\r\n  selectRow,\r\n  deleteRow,\r\n  changeVisibleColumns,\r\n  toggleVirtualization,\r\n};\r\n","import Search from './Search';\r\n\r\nexport default Search;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\n\r\nimport { changeSearchQquery } from '../../../redux/actions';\r\nimport './Search.scss';\r\n\r\nconst Search = () => {\r\n  const searchQuery = useSelector((state) => state.searchQuery);\r\n  const initialQuery = searchQuery ? searchQuery.query : '';\r\n  const initialSelectedOptions = searchQuery ? searchQuery.fields\r\n    : [{ value: 'name', label: 'Name' }];\r\n  const [selectedOptions, changeSelectedOptions] = useState(initialSelectedOptions);\r\n  const [query, changeQuery] = useState(initialQuery);\r\n  const dispatch = useDispatch();\r\n  const options = [\r\n    { value: 'name', label: 'Name' },\r\n    { value: 'city', label: 'City' },\r\n    { value: 'age', label: 'Age' },\r\n    { value: 'email', label: 'Email' },\r\n  ];\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    changeQuery(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(changeSearchQquery({ query, fields: selectedOptions }));\r\n  };\r\n\r\n  const handleChangeFields = (opts) => {\r\n    changeSelectedOptions(opts);\r\n    dispatch(changeSearchQquery({ query, fields: opts }));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <label className=\"search__label\" htmlFor=\"search\">Search</label>\r\n      <form className=\"search__control\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"search__input\"\r\n          type=\"text\"\r\n          id=\"search\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n        <Select\r\n          className=\"search__select\"\r\n          placeholder=\"Select column\"\r\n          onChange={handleChangeFields}\r\n          options={options}\r\n          value={selectedOptions}\r\n          isMulti\r\n          isSearchable={false}\r\n        />\r\n        <button className=\"search__button\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\n\r\nimport './EnumFilter.scss';\r\n\r\nconst Filter = ({\r\n  label,\r\n  options,\r\n  defaultOptions,\r\n  isMulti,\r\n  isSearchable,\r\n  onChange,\r\n}) => {\r\n  const [value, changeValue] = useState(defaultOptions);\r\n  const changeHandle = (selectedOptions) => {\r\n    changeValue(selectedOptions);\r\n    onChange(selectedOptions);\r\n  };\r\n  return (\r\n    <div className=\"select-filter\">\r\n      <label\r\n        className=\"select-filter__label\"\r\n        htmlFor={label}\r\n      >\r\n        {label}\r\n      </label>\r\n      <Select\r\n        id={label}\r\n        className=\"select-filter__select\"\r\n        placeholder=\"Select value\"\r\n        onChange={changeHandle}\r\n        options={options}\r\n        value={value}\r\n        isMulti={isMulti}\r\n        isSearchable={isSearchable}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  isMulti: PropTypes.bool,\r\n  isSearchable: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.shape({\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n  defaultOptions: PropTypes.arrayOf(PropTypes.shape({\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nFilter.defaultProps = {\r\n  isMulti: false,\r\n  isSearchable: false,\r\n};\r\n\r\nexport default Filter;\r\n","import EnumFilter from './EnumFilter';\r\n\r\nexport default EnumFilter;\r\n","import Toggle from './Toggle';\r\n\r\nexport default Toggle;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React from 'react';\r\nimport ReactToggle from 'react-toggle';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Toggle.scss';\r\n\r\nconst Toggle = ({ onToggle, isChecked }) => {\r\n  const handleChange = (event) => {\r\n    const { checked } = event.target;\r\n    onToggle(checked);\r\n  };\r\n  return (\r\n    <div className=\"toggle__body\">\r\n      <label className=\"toggle__label\">Active Only</label>\r\n      <ReactToggle\r\n        defaultChecked={isChecked}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  onToggle: PropTypes.func.isRequired,\r\n  isChecked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Toggle;\r\n","import FilterBar from './FilterBar';\r\n\r\nexport default FilterBar;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { changeFilter } from '../../redux/actions';\r\nimport Search from './Search';\r\nimport EnumFilter from './EnumFilter';\r\nimport Toggle from './Toggle';\r\nimport './FilterBar.scss';\r\n\r\nconst FilterBar = () => {\r\n  const filters = useSelector((state) => state.filters);\r\n  const dispatch = useDispatch();\r\n\r\n  const options = [\r\n    { value: 'mentor', label: 'Mentor' },\r\n    { value: 'student', label: 'Student' },\r\n    { value: 'activist', label: 'Activist' },\r\n  ];\r\n  const defaultOptions = 'role' in filters\r\n    ? filters.role.map((item) => ({ value: item, label: `${item[0].toUpperCase()}${item.slice(1)}` }))\r\n    : [];\r\n  const handleToggle = (value) => {\r\n    const values = value ? [value] : [];\r\n    dispatch(changeFilter({ field: 'active', values }));\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    const values = value ? value.map((item) => item.value) : [];\r\n    dispatch(changeFilter({ field: 'role', values }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-bar\">\r\n      <Toggle\r\n        onToggle={handleToggle}\r\n        isChecked={'active' in filters}\r\n      />\r\n      <Search />\r\n      <EnumFilter\r\n        options={options}\r\n        defaultOptions={defaultOptions}\r\n        label=\"Role\"\r\n        onChange={handleChange}\r\n        isMulti\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","export default (data, fields) => data.slice().sort((item1, item2) => {\r\n  const keys = Object.keys(fields);\r\n  const { length } = keys;\r\n  for (let i = 0; i < length; i += 1) {\r\n    const key = keys[i];\r\n    if (fields[keys[i]] === 'asc') {\r\n      if (item1[key] > item2[key]) {\r\n        return 1;\r\n      }\r\n      if (item1[key] < item2[key]) {\r\n        return -1;\r\n      }\r\n    }\r\n\r\n    if (fields[keys[i]] === 'desc') {\r\n      if (item1[key] > item2[key]) {\r\n        return -1;\r\n      }\r\n      if (item1[key] < item2[key]) {\r\n        return 1;\r\n      }\r\n    }\r\n  }\r\n  return 0;\r\n});\r\n","export default (data, searchQuery, filters) => {\r\n  const search = (item) => {\r\n    if (!searchQuery) return true;\r\n    const { query, fields } = searchQuery;\r\n    const keys = fields.map(({ value }) => value);\r\n    return keys.some((key) => {\r\n      const string = String(item[key]).toLowerCase();\r\n      return string.indexOf(query.toLowerCase()) !== -1;\r\n    });\r\n  };\r\n  const filter = (item) => {\r\n    const keys = Object.keys(filters);\r\n    if (keys.length === 0) return true;\r\n    return keys.every((key) => {\r\n      const value = item[key];\r\n      return filters[key].some((elem) => elem === value);\r\n    });\r\n  };\r\n  return data.filter((item) => search(item) && filter(item));\r\n};\r\n","import ToolBar from './ToolBar';\r\n\r\nexport default ToolBar;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport ReactToggle from 'react-toggle';\r\n\r\nimport { deleteRow, changeVisibleColumns, toggleVirtualization } from '../../redux/actions';\r\nimport saveSCV from '../../utils/saveSCV';\r\nimport './ToolBar.scss';\r\n\r\nconst ToolBar = () => {\r\n  const selectedRows = useSelector((state) => state.selectedRows);\r\n  const visibleColumns = useSelector((state) => state.visibleColumns);\r\n  const params = useSelector(({\r\n    data, filters, searchQuery, sort,\r\n  }) => ({\r\n    data, filters, searchQuery, sort,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const options = [\r\n    { value: 'name', label: 'Name', isFixed: true },\r\n    { value: 'age', label: 'Age', isFixed: false },\r\n    { value: 'city', label: 'City', isFixed: false },\r\n    { value: 'status', label: 'Status', isFixed: false },\r\n    { value: 'email', label: 'Email', isFixed: false },\r\n    { value: 'role', label: 'Role', isFixed: false },\r\n    { value: 'registration', label: 'Registration', isFixed: false },\r\n  ];\r\n\r\n  const saveTable = () => {\r\n    saveSCV(\r\n      params.data, params.filters, params.searchQuery, params.sort, visibleColumns,\r\n    );\r\n  };\r\n\r\n  const handleChangeFields = (value, { action, removedValue }) => {\r\n    switch (action) {\r\n      case 'remove-value':\r\n      case 'pop-value':\r\n        if (removedValue.isFixed) {\r\n          return;\r\n        }\r\n        break;\r\n      case 'clear':\r\n        // eslint-disable-next-line no-param-reassign\r\n        value = options.filter((v) => v.isFixed);\r\n        break;\r\n      default:\r\n    }\r\n    dispatch(changeVisibleColumns(value));\r\n  };\r\n\r\n  const styles = {\r\n    multiValue: (base, state) => (state.data.isFixed ? { ...base, backgroundColor: 'gray' } : base),\r\n    multiValueLabel: (base, state) => (state.data.isFixed\r\n      ? {\r\n        ...base, fontWeight: 'bold', color: 'white', paddingRight: 6,\r\n      }\r\n      : base),\r\n    multiValueRemove: (base, state) => (state.data.isFixed ? { ...base, display: 'none' } : base),\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(deleteRow());\r\n  };\r\n\r\n  const handleToggle = (event) => {\r\n    const { target: { checked } } = event;\r\n    dispatch(toggleVirtualization(checked));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tool-bar\">\r\n      <div className=\"tool-bar__left\">\r\n        <button\r\n          className=\"tool-bar__button\"\r\n          type=\"button\"\r\n          disabled={Object.keys(selectedRows).length === 0}\r\n          onClick={handleClick}\r\n        >\r\n          Delete\r\n        </button>\r\n        <Select\r\n          className=\"tool-bar__select\"\r\n          placeholder=\"Select column\"\r\n          onChange={handleChangeFields}\r\n          options={options}\r\n          isClearable={visibleColumns.some((v) => !v.isFixed)}\r\n          styles={styles}\r\n          value={visibleColumns}\r\n          isMulti\r\n          isSearchable={false}\r\n        />\r\n      </div>\r\n      <div className=\"tool-bar__right\">\r\n        <button\r\n          className=\"tool-bar__button\"\r\n          type=\"button\"\r\n          onClick={saveTable}\r\n        >\r\n          Save SCV\r\n        </button>\r\n        <div>\r\n          <span>Virtualisation: </span>\r\n          <ReactToggle\r\n            defaultChecked\r\n            onChange={handleToggle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolBar;\r\n","import sortData from './sortData';\r\nimport filterData from './filterData';\r\n\r\nexport default (\r\n  data, filters, searchQuery, sort, visibleColumn,\r\n) => {\r\n  const filteredData = filterData(data, searchQuery, filters);\r\n  const sortingData = sortData(filteredData, sort);\r\n  const columns = visibleColumn.map((item) => item.value);\r\n  const keys = Object.keys(data[0]).filter((key) => columns.includes(key));\r\n  const header = `${keys.join(',')}\\n`;\r\n  let string = header;\r\n  sortingData.forEach((item) => {\r\n    const row = [];\r\n    keys.forEach((key) => {\r\n      row.push(item[key]);\r\n    });\r\n    string = `${string}${row.join(',')}\\n`;\r\n  });\r\n  const hiddenElement = document.createElement('a');\r\n  hiddenElement.href = `data:text/csv;charset=utf-8,${encodeURI(string)}`;\r\n  hiddenElement.target = '_blank';\r\n  hiddenElement.download = 'table.csv';\r\n  hiddenElement.click();\r\n};\r\n","import SortToggle from './SortToggle';\r\n\r\nexport default SortToggle;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SortToggle.scss';\r\nimport sortNot from './img/sort-not.svg';\r\nimport sortAsc from './img/sort-asc.svg';\r\nimport sortDesc from './img/sort-desc.svg';\r\n\r\nconst SortToggle = ({\r\n  children, order, onChangeSort, index,\r\n}) => {\r\n  const handleClick = (event) => {\r\n    const { shiftKey } = event;\r\n    onChangeSort({ field: children, isPressedShift: shiftKey });\r\n  };\r\n\r\n  const IMAGES = {\r\n    asc: sortAsc,\r\n    desc: sortDesc,\r\n    not: sortNot,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"toggle\"\r\n      type=\"button\"\r\n      onClick={handleClick}\r\n    >\r\n      { children }\r\n      <div className=\"toggle__indicator\">\r\n        {index}\r\n        <img className=\"toggle__image\" src={IMAGES[order]} alt=\"sorting\" />\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nSortToggle.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  onChangeSort: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SortToggle;\r\n","import THead from './THead';\r\n\r\nexport default THead;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SortToggle from '../SortToggle';\r\nimport './THead.scss';\r\n\r\nconst THead = ({ columns, sort, onChangeSort }) => {\r\n  const keys = Object.keys(columns);\r\n  const sortList = Object.keys(sort);\r\n  const row = keys.map((key) => (\r\n    <div\r\n      className={`thead__item thead__item--${key}`}\r\n      key={key}\r\n    >\r\n      <div className=\"thead__content\">\r\n        <SortToggle\r\n          order={key in sort ? sort[key] : 'not'}\r\n          onChangeSort={onChangeSort}\r\n          index={sortList.length > 0 && sortList.includes(key) ? sortList.indexOf(key) + 1 : null}\r\n        >\r\n          {key}\r\n        </SortToggle>\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"thead\">\r\n      <div className=\"thead__row\">\r\n        <div className=\"thead__selected\">\r\n          #\r\n        </div>\r\n        {row}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTHead.propTypes = {\r\n  columns: PropTypes.instanceOf(Object).isRequired,\r\n  sort: PropTypes.instanceOf(Object).isRequired,\r\n  onChangeSort: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default THead;\r\n","import Row from './Row';\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Row.scss';\r\n\r\nconst Row = ({\r\n  data, columns, onSelectRow, selected,\r\n}) => {\r\n  const { id } = data;\r\n  const handleChange = () => {};\r\n  const handleClick = (event) => {\r\n    const { target: { checked }, shiftKey } = event;\r\n    onSelectRow({ id, checked }, shiftKey);\r\n  };\r\n  const items = Object.keys(columns).map((item) => {\r\n    const className = `row__item row__item--${item}`;\r\n    return (\r\n      <div className={className} key={item}>\r\n        {columns[item](data[item])}\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className={`row${selected ? ' row--active' : ''}`}>\r\n      <div className=\"row__selected\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={selected}\r\n          onClick={handleClick}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      {items}\r\n    </div>\r\n  );\r\n};\r\n\r\nRow.propTypes = {\r\n  selected: PropTypes.bool.isRequired,\r\n  data: PropTypes.instanceOf(Object).isRequired,\r\n  columns: PropTypes.instanceOf(Object).isRequired,\r\n  onSelectRow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Row;\r\n","import TBody from './TBody';\r\n\r\nexport default TBody;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from '../Row';\r\nimport './TBody.scss';\r\n\r\nconst TBody = ({\r\n  data, columns, onSelectRow, selectedRows,\r\n}) => {\r\n  const rows = data.map((row) => (\r\n    <Row\r\n      key={row.id}\r\n      data={row}\r\n      selected={row.id in selectedRows}\r\n      columns={columns}\r\n      onSelectRow={onSelectRow}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"tbody\">\r\n      {rows}\r\n    </div>\r\n  );\r\n};\r\n\r\nTBody.propTypes = {\r\n  columns: PropTypes.instanceOf(Object).isRequired,\r\n  data: PropTypes.instanceOf(Object).isRequired,\r\n  selectedRows: PropTypes.instanceOf(Object).isRequired,\r\n  onSelectRow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TBody;\r\n","import Table from './Table';\r\n\r\nexport default Table;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { forwardRef } from 'react';\r\nimport { FixedSizeList as List } from 'react-window';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { changeSort, selectRow } from '../../redux/actions';\r\nimport sortData from '../../utils/sortData';\r\nimport search from '../../utils/filterData';\r\nimport THead from './THead';\r\nimport TBody from './TBody';\r\nimport Row from './Row';\r\nimport './Table.scss';\r\n\r\nconst Table = () => {\r\n  const data = useSelector((state) => {\r\n    const {\r\n      data: initData,\r\n      sort,\r\n      searchQuery,\r\n      filters,\r\n    } = state;\r\n    const filteredData = search(initData, searchQuery, filters);\r\n    return sortData(filteredData, sort);\r\n  });\r\n  const sort = useSelector((state) => state.sort);\r\n  const lastSelectedRow = useSelector((state) => state.lastSelectedRow);\r\n  const selectedRows = useSelector((state) => state.selectedRows);\r\n  const visibleColumns = useSelector((state) => state.visibleColumns.map((item) => item.value));\r\n  const isVirtualize = useSelector((state) => state.virtualization);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelectRow = (args, shiftKey) => {\r\n    const endIndex = data.findIndex((item) => item.id === args.id);\r\n    if (shiftKey && lastSelectedRow) {\r\n      const startIndex = data.findIndex((item) => item.id === lastSelectedRow);\r\n      const elements = data\r\n        .slice(startIndex > endIndex ? endIndex : startIndex,\r\n          (startIndex > endIndex ? startIndex : endIndex) + 1)\r\n        .map((item) => item.id);\r\n      dispatch(selectRow({ elements, lastSel: data[endIndex].id }));\r\n    } else {\r\n      dispatch(selectRow({ elements: [args.id], lastSel: data[endIndex].id }));\r\n    }\r\n  };\r\n\r\n  const handleShangeSort = (payload) => {\r\n    dispatch(changeSort(payload));\r\n  };\r\n\r\n  const COLUMNS = {\r\n    name: (value) => value,\r\n    age: (value) => value,\r\n    city: (value) => value,\r\n    active: (value) => (value ? 'Yes' : 'No'),\r\n    email: (value) => value,\r\n    role: (value) => value,\r\n    registration: (value) => moment(value).format('D MMM Y'),\r\n  };\r\n\r\n  const columns = (object, array) => {\r\n    const keys = Object.keys(COLUMNS);\r\n    const result = {};\r\n    keys.forEach((item) => {\r\n      if (array.includes(item)) {\r\n        result[item] = object[item];\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const fields = columns(COLUMNS, visibleColumns);\r\n\r\n  const row = ({ index, style }) => (\r\n    <div className=\"row\" style={style}>\r\n      <Row\r\n        key={data[index].id}\r\n        data={data[index]}\r\n        selected={data[index].id in selectedRows}\r\n        columns={fields}\r\n        onSelectRow={handleSelectRow}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const innerElementType = forwardRef(({ children, ...rest }, ref) => (\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    <div ref={ref} {...rest}>\r\n      <div className=\"sticky\">\r\n        <THead\r\n          columns={fields}\r\n          onChangeSort={handleShangeSort}\r\n          sort={sort}\r\n        />\r\n      </div>\r\n      {children}\r\n    </div>\r\n  ));\r\n\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      {isVirtualize ? (\r\n        <List\r\n          className=\"sticky-list\"\r\n          height={600}\r\n          itemCount={data.length}\r\n          itemSize={40}\r\n          width={1200}\r\n          overscanCount={10}\r\n          innerElementType={innerElementType}\r\n        >\r\n          {row}\r\n        </List>\r\n      ) : (\r\n        <div className=\"table__table\">\r\n          <THead\r\n            columns={fields}\r\n            onChangeSort={handleShangeSort}\r\n            sort={sort}\r\n          />\r\n          <TBody\r\n            data={data}\r\n            columns={fields}\r\n            selectedRows={selectedRows}\r\n            onSelectRow={handleSelectRow}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport FilterBar from '../FilterBar';\r\nimport ToolBar from '../ToolBar';\r\nimport Table from '../Table';\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n  <div className=\"app\">\r\n    <FilterBar />\r\n    <ToolBar />\r\n    <Table />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import faker from 'faker';\r\n\r\nconst getData = (number) => {\r\n  const data = [];\r\n  for (let i = 0; i < number; i += 1) {\r\n    const firstName = faker.name.firstName();\r\n    const lastName = faker.name.lastName();\r\n    data.push({\r\n      id: faker.random.uuid(),\r\n      name: `${firstName} ${lastName}`,\r\n      age: faker.random.number(40),\r\n      city: faker.address.city(),\r\n      active: faker.random.boolean(),\r\n      email: faker.internet.email(firstName, lastName),\r\n      role: faker.random.arrayElement(['mentor', 'student', 'activist']),\r\n      registration: faker.date.between('2019-1-1', '2020-1-1').getTime(),\r\n    });\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default getData;\r\n","import {\r\n  CHANGE_SORT,\r\n  CHANGE_SEARCH_QUERY,\r\n  CHANGE_FILTER,\r\n  SELECT_ROW,\r\n  DELETE_ROW,\r\n  CHANGE_VISIBLE_COLUMNS,\r\n  TOGGLE_VIRTUALIZATION,\r\n} from './actionsTypes';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SORT: {\r\n      const { sort } = state;\r\n      const { field, isPressedShift } = action.payload;\r\n      const SORT_ORDER = {\r\n        asc: 'desc',\r\n        desc: 'not',\r\n        not: 'asc',\r\n      };\r\n      let newSort = null;\r\n      const cloneSort = isPressedShift === true ? { ...sort } : {};\r\n      if (field in sort) {\r\n        const order = sort[field];\r\n        const newOrder = SORT_ORDER[order];\r\n        if (newOrder === 'not') {\r\n          delete cloneSort[field];\r\n          newSort = cloneSort;\r\n        } else {\r\n          newSort = { ...cloneSort, [field]: newOrder };\r\n        }\r\n      } else {\r\n        newSort = { ...cloneSort, [field]: 'asc' };\r\n      }\r\n      return { ...state, sort: newSort };\r\n    }\r\n    case CHANGE_SEARCH_QUERY: {\r\n      const searchQuery = action.payload;\r\n      const { query, fields } = searchQuery;\r\n      const isQuery = query !== '' && fields;\r\n      const newSearchQuery = isQuery ? searchQuery : null;\r\n      return { ...state, searchQuery: newSearchQuery };\r\n    }\r\n    case CHANGE_FILTER: {\r\n      const { field, values } = action.payload;\r\n      const { filters } = state;\r\n      const newFilters = { ...filters };\r\n      if (field in filters && values.length === 0) {\r\n        delete newFilters[field];\r\n      } else {\r\n        newFilters[field] = values;\r\n      }\r\n      return { ...state, filters: newFilters };\r\n    }\r\n    case SELECT_ROW: {\r\n      const { elements, lastSel } = action.payload;\r\n      const { selectedRows } = state;\r\n      const newSelectedRow = { ...selectedRows };\r\n      const isDelete = elements.every((item) => item in newSelectedRow);\r\n      if (isDelete) {\r\n        elements.forEach((el) => delete newSelectedRow[el]);\r\n      } else {\r\n        elements.forEach((el) => { newSelectedRow[el] = true; });\r\n      }\r\n      return { ...state, selectedRows: newSelectedRow, lastSelectedRow: lastSel };\r\n    }\r\n    case DELETE_ROW: {\r\n      const { data, selectedRows } = state;\r\n      const idList = Object.keys(selectedRows);\r\n      const newData = data.slice();\r\n      idList.forEach((id) => {\r\n        const index = newData.findIndex((item) => item.id === id);\r\n        newData.splice(index, 1);\r\n      });\r\n      return {\r\n        ...state, data: newData, selectedRows: {}, lastSelectedRow: null,\r\n      };\r\n    }\r\n    case CHANGE_VISIBLE_COLUMNS: {\r\n      const { payload } = action;\r\n      return { ...state, visibleColumns: payload };\r\n    }\r\n    case TOGGLE_VIRTUALIZATION: {\r\n      const { payload } = action;\r\n      return { ...state, virtualization: payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/* eslint-disable no-shadow */\n/* eslint-disable react/jsx-filename-extension */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport getData from './utils/getData';\nimport reducer from './redux/reducer';\nimport './index.scss';\n\nconst savedState = localStorage.getItem('appState');\nconst initialState = {\n  data: getData(1000),\n  sort: {},\n  searchQuery: null,\n  filters: {},\n  selectedRows: {},\n  lastSelectedRow: null,\n  visibleColumns: [\n    { value: 'name', label: 'Name', isFixed: true },\n    { value: 'age', label: 'Age', isFixed: false },\n    { value: 'city', label: 'City', isFixed: false },\n    { value: 'active', label: 'Active', isFixed: false },\n    { value: 'email', label: 'Email', isFixed: false },\n    { value: 'role', label: 'Role', isFixed: false },\n    { value: 'registration', label: 'Registration', isFixed: false },\n  ],\n  virtualization: true,\n};\n\nconst state = savedState ? { ...initialState, ...JSON.parse(savedState) } : initialState;\n\nconst store = createStore(\n  reducer,\n  state,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);\n\nconst unloadHandler = () => {\n  const state = store.getState();\n  const {\n    sort, searchQuery, filters, visibleColumns,\n  } = state;\n  const newState = {\n    sort, searchQuery, filters, visibleColumns,\n  };\n  const currentState = JSON.stringify(newState);\n  localStorage.setItem('appState', currentState);\n};\n\nwindow.addEventListener('unload', unloadHandler);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sort-not.a455d9bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-asc.b5e00e04.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort-desc.391ccdd8.svg\";"],"sourceRoot":""}